.TH "/home/clover/Projects/web-server/lib/http-handler.h" 3 "Tue Sep 13 2022" "web-server" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/clover/Projects/web-server/lib/http-handler.h
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBHTTP_HEADER_LEN\fP   8192"
.br
.ti -1c
.RI "#define \fBHTTP_REQUEST_METHOD_LEN\fP   8"
.br
.ti -1c
.RI "#define \fBHTTP_REQUEST_PATH_LEN\fP   1024"
.br
.ti -1c
.RI "#define \fBHTTP_REQUEST_VERSION_LEN\fP   10"
.br
.ti -1c
.RI "#define \fBHTTP_REQUEST_STATUS_LINE_LEN\fP   (\fBHTTP_REQUEST_METHOD_LEN\fP) + (\fBHTTP_REQUEST_PATH_LEN\fP) + (\fBHTTP_REQUEST_VERSION_LEN\fP)"
.br
.ti -1c
.RI "#define \fBCRLF\fP   '\\r\\n\\r\\n'"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBhttpMethod\fP { \fBGET\fP, \fBHEAD\fP, \fBPOST\fP, \fBPUT\fP, \fBDELETE\fP, \fBCONNECT\fP, \fBOPTIONS\fP, \fBTRACE\fP, \fBPATCH\fP }"
.br
.ti -1c
.RI "enum \fBhttpStatus\fP { \fBCONTINUE\fP = 100, \fBSWITCHING_PROTOCOLS\fP, \fBPROCESSING\fP, \fBEARLY_HINTS\fP, \fBOK\fP = 200, \fBCREATED\fP, \fBACCEPTED\fP, \fBNON_AUTHORITATIVE_INFORMATION\fP, \fBNO_CONTENT\fP, \fBRESET_CONTENT\fP, \fBPARTIAL_CONTENT\fP, \fBMULTI_STATUS\fP, \fBALREADY_REPORTED\fP, \fBIM_USED\fP = 226, \fBMULTIPLE_CHOICE\fP = 300, \fBMOVED_PERMANENTLY\fP, \fBFOUND\fP, \fBSEE_OTHER\fP, \fBNOT_MODIFIED\fP, \fBUSE_PROXY\fP, \fBUNUSED\fP, \fBTEMPORARY_REDIRECT\fP, \fBPERMANENT_REDIRECT\fP, \fBBAD_REQUEST\fP = 400, \fBUNAUTHORIZED\fP, \fBPAYMENT_REQUIRED\fP, \fBFORBIDDEN\fP, \fBNOT_FOUND\fP, \fBMETHOD_NOT_ALLOWED\fP, \fBNOT_ACCEPTABLE\fP, \fBPROXY_AUTHENTICATION_REQUIRED\fP, \fBREQUEST_TIMEOUT\fP, \fBCONFLICT\fP, \fBGONE\fP, \fBLENGTH_REQUIRED\fP, \fBPRECONDITION_FAILED\fP, \fBPAYLOAD_TOO_LARGE\fP, \fBURI_TOO_LONG\fP, \fBUNSUPPORTED_MEDIA_TYPE\fP, \fBRANGE_NOT_SATISFIABLE\fP, \fBEXPECTATION_FAILED\fP, \fBIM_A_TEAPOT\fP, \fBMISDIRECTED_REQUEST\fP = 421, \fBUNPROCESSABLE_ENTITY\fP, \fBLOCKED\fP, \fBFAILED_DEPENDENCY\fP, \fBTOO_EARLY\fP, \fBUPGRADE_REQUIRED\fP, \fBPRECONDITION_REQUIRED\fP = 428, \fBTOO_MANY_REQUESTS\fP, \fBREQUEST_HEADER_FIELDS_TOO_LARGE\fP = 431, \fBUNAVAILABLE_FOR_LEGAL_REASONS\fP = 451, \fBINTERNAL_SERVER_ERROR\fP = 500, \fBNOT_IMPLEMENTED\fP, \fBBAD_GATEWAY\fP, \fBSERVICE_UNAVAILABLE\fP, \fBGATEWAY_TIMEOUT\fP, \fBHTTP_VERSION_NOT_SUPPORTED\fP, \fBVARIANT_ALSO_NEGOTIATES\fP, \fBINSUFFICIENT_STORAGE\fP, \fBLOOP_DETECTED\fP, \fBNOT_EXTENDED\fP = 510, \fBNETWORK_AUTHENTICATION_REQURIED\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBhandleHTTPClientRequest\fP (int receiveMessageSize, char receiveMessage[receiveMessageSize], int responseMessageSize, char responseMessage[responseMessageSize])"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBAuthor\fP
.RS 4
Little Clover 
.RE
.PP
\fBDate\fP
.RS 4
2022-09-10 18:13:09 PM +0800 
.RE
.PP

.PP
Definition in file \fBhttp\-handler\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define CRLF   '\\r\\n\\r\\n'"
CRLF character 
.PP
Definition at line \fB32\fP of file \fBhttp\-handler\&.h\fP\&.
.SS "#define HTTP_HEADER_LEN   8192"
Supported maximum HTTP header size 
.PP
Definition at line \fB12\fP of file \fBhttp\-handler\&.h\fP\&.
.SS "#define HTTP_REQUEST_METHOD_LEN   8"
Maximum string length of HTTP request method 
.PP
Definition at line \fB16\fP of file \fBhttp\-handler\&.h\fP\&.
.SS "#define HTTP_REQUEST_PATH_LEN   1024"
Maximum string length of HTTP request path 
.PP
Definition at line \fB20\fP of file \fBhttp\-handler\&.h\fP\&.
.SS "#define HTTP_REQUEST_STATUS_LINE_LEN   (\fBHTTP_REQUEST_METHOD_LEN\fP) + (\fBHTTP_REQUEST_PATH_LEN\fP) + (\fBHTTP_REQUEST_VERSION_LEN\fP)"
Maximum size of HTTP status line 
.PP
Definition at line \fB28\fP of file \fBhttp\-handler\&.h\fP\&.
.SS "#define HTTP_REQUEST_VERSION_LEN   10"
Maximum string length of HTTP request version 
.PP
Definition at line \fB24\fP of file \fBhttp\-handler\&.h\fP\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBhttpMethod\fP"
Supported HTTP request method adhered to the standard\&.
.PP
\fBSee also\fP
.RS 4
https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods 
.RE
.PP

.PP
Definition at line \fB39\fP of file \fBhttp\-handler\&.h\fP\&.
.PP
.nf
39 { GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH };
.fi
.SS "enum \fBhttpStatus\fP"
Supported HTTP response status code adhered to the standard\&.
.PP
\fBSee also\fP
.RS 4
https://developer.mozilla.org/en-US/docs/Web/HTTP/Status 
.RE
.PP

.PP
Definition at line \fB65\fP of file \fBhttp\-handler\&.h\fP\&.
.PP
.nf
65                 {
66   CONTINUE = 100,
67   SWITCHING_PROTOCOLS,
68   PROCESSING,
69   EARLY_HINTS,
70   OK = 200,
71   CREATED,
72   ACCEPTED,
73   NON_AUTHORITATIVE_INFORMATION,
74   NO_CONTENT,
75   RESET_CONTENT,
76   PARTIAL_CONTENT,
77   MULTI_STATUS,
78   ALREADY_REPORTED,
79   IM_USED = 226,
80   MULTIPLE_CHOICE = 300,
81   MOVED_PERMANENTLY,
82   FOUND,
83   SEE_OTHER,
84   NOT_MODIFIED,
85   USE_PROXY,
86   UNUSED,
87   TEMPORARY_REDIRECT,
88   PERMANENT_REDIRECT,
89   BAD_REQUEST = 400,
90   UNAUTHORIZED,
91   PAYMENT_REQUIRED,
92   FORBIDDEN,
93   NOT_FOUND,
94   METHOD_NOT_ALLOWED,
95   NOT_ACCEPTABLE,
96   PROXY_AUTHENTICATION_REQUIRED,
97   REQUEST_TIMEOUT,
98   CONFLICT,
99   GONE,
100   LENGTH_REQUIRED,
101   PRECONDITION_FAILED,
102   PAYLOAD_TOO_LARGE,
103   URI_TOO_LONG,
104   UNSUPPORTED_MEDIA_TYPE,
105   RANGE_NOT_SATISFIABLE,
106   EXPECTATION_FAILED,
107   IM_A_TEAPOT,
108   MISDIRECTED_REQUEST = 421,
109   UNPROCESSABLE_ENTITY,
110   LOCKED,
111   FAILED_DEPENDENCY,
112   TOO_EARLY,
113   UPGRADE_REQUIRED,
114   PRECONDITION_REQUIRED = 428,
115   TOO_MANY_REQUESTS,
116   REQUEST_HEADER_FIELDS_TOO_LARGE = 431,
117   UNAVAILABLE_FOR_LEGAL_REASONS = 451,
118   INTERNAL_SERVER_ERROR = 500,
119   NOT_IMPLEMENTED,
120   BAD_GATEWAY,
121   SERVICE_UNAVAILABLE,
122   GATEWAY_TIMEOUT,
123   HTTP_VERSION_NOT_SUPPORTED,
124   VARIANT_ALSO_NEGOTIATES,
125   INSUFFICIENT_STORAGE,
126   LOOP_DETECTED,
127   NOT_EXTENDED = 510,
128   NETWORK_AUTHENTICATION_REQURIED
129 };
.fi
.SH "Function Documentation"
.PP 
.SS "int handleHTTPClientRequest (int receiveMessageSize, char receiveMessage[receiveMessageSize], int responseMessageSize, char responseMessage[responseMessageSize])"
handle a HTTP client request message and then create an HTTP response status code based its request method\&.
.PP
\fBParameters\fP
.RS 4
\fIreceiveMessageSize\fP The size of the \fIreceiveMessage\fP 
.br
\fIreceiveMessage\fP The HTTP client request message received with a size of \fIreceiveMessageSize\fP 
.br
\fIresponseMessageSize\fP The size of the \fIresponseMessage\fP 
.br
\fIresponseMessage\fP The HTTP response status code formatted as a string with a size of \fIresponseMessageSize\fP 
.RE
.PP
\fBReturn values\fP
.RS 4
\fI0\fP \fIresponseMessage\fP has been successfully created\&. 
.br
\fI-1\fP Failure in either parsing the \fIreceiveMessage\fP or creating a \fIresponseMessage\fP 
.RE
.PP
\fBSee also\fP
.RS 4
parseHTTPRequest() 
.PP
createHTTPResponseMessage() 
.RE
.PP

.PP
Definition at line \fB97\fP of file \fBhttp\-handler\&.c\fP\&.
.PP
.nf
101 {
102   char httpRequestMethod[HTTP_REQUEST_METHOD_LEN] = { 0 };
103   char httpRequestPath[HTTP_REQUEST_PATH_LEN] = { 0 };
104   char httpRequestVersion[HTTP_REQUEST_VERSION_LEN] = { 0 };
105 
106   int httpParseStatus = parseHTTPRequest(receiveMessageSize,
107                                          receiveMessage,
108                                          httpRequestMethod,
109                                          httpRequestPath,
110                                          httpRequestVersion,
111                                          " ");
112   if (httpParseStatus == -1 ) {
113     fprintf(stderr, "web-server: Failed to parse HTTP request header\n");
114     fprintf(stderr, "web-server: Received HTTP request as follows:\n%s",
115             receiveMessage);
116     return -1;  /* Failure */
117   }
118 
119   int httpRequestMethodHandler = -1;
120   for (int i = 0; i <= PATCH; i++)
121     if (strcmp(httpRequestMethod, httpMethodStr[i]) == 0)
122       httpRequestMethodHandler = i;
123 
124   switch (httpRequestMethodHandler) {
125     case GET:
126       if (createHTTPResponseMessage(responseMessageSize, responseMessage, OK) == -1)
127         return -1;  /* Failure */
128       break;
129     case HEAD:
130     case POST:
131     case PUT:
132     case DELETE:
133     case CONNECT:
134     case OPTIONS:
135     case TRACE:
136     case PATCH:
137       if (createHTTPResponseMessage(responseMessageSize, responseMessage, METHOD_NOT_ALLOWED) == -1)
138         return -1;  /* Failure */
139       break;
140     default:
141       if (createHTTPResponseMessage(responseMessageSize, responseMessage, NOT_IMPLEMENTED) == -1)
142         return -1;  /* Failure */
143       break;
144   };
145 
146   return 0; /* Success */
147 };
.fi
.PP
References \fBHTTP_REQUEST_METHOD_LEN\fP, \fBHTTP_REQUEST_PATH_LEN\fP, and \fBHTTP_REQUEST_VERSION_LEN\fP\&.
.PP
Referenced by \fBmain()\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for web-server from the source code\&.
